datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

enum Role {
  USER
  STAFF
  ADMIN
  SUPERUSER
}

// model Group {
//   id   Int     @id @default(autoincrement())
//   name String?
//   User User[]
// }

model User {
  id              String           @id @default(cuid())
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @default(now())
  email           String           @unique
  username        String           @unique
  password        String           @default(cuid())
  sessionVersion  Int              @default(1)
  isVerified      Boolean          @default(false)
  isActive        Boolean          @default(false)
  firstName       String
  lastName        String
  role            Role             @default(USER)
}
  // groupId       Int?
  // group         Group?           @relation(fields: [groupId], references: [id])
  // posts         Post[]
  // profile       ExtendedProfile?
// }

// model ExtendedProfile {
//   id            Int     @id @default(autoincrement())
//   userId        Int?    @unique
//   firstName     String?
//   lastName      String?
//   bio           String?
//   profilelImage String?
//   city          String
//   country       String
//   profileViews  Int     @default(0)
//   User          User?   @relation(fields: [userId], references: [id])
// }

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @default(now())
//   title     String
//   content   String?
//   published Boolean? @default(false)
//   author    User?    @relation(fields: [authorId], references: [id])
//   authorId  Int?
//   comments  Json
//   views     Int      @default(0)
//   likes     Int      @default(0)
// }
