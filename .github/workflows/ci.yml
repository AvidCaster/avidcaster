name: CI

# Run on push only for main
# Otherwise it may trigger concurrently `push & pull_request` on PRs.
on:
  push:
    branches:
      - main
      - ci
    paths-ignore:
      - '*.md'
      - '.vscode/**'
      - 'docs/**'
      - 'examples/**'
      - 'LICENSE'
      - 'tools/**'
      - 'graphs/**'
  pull_request:
    paths-ignore:
      - '*.md'
      - '.vscode/**'
      - 'docs/**'
      - 'examples/**'
      - 'LICENSE'
      - 'tools/**'
      - 'graphs/**'
  # workflow_dispatch:

jobs:
  #
  # Linting
  #
  lint:
    timeout-minutes: 7
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      run: |
        git --version
        node --version
        yarn --version

      # - name: Get branch name
      #   id: branch
      #   run: echo ::set-output name=current_branch::${GITHUB_REF#refs/*/}

      # - name: Install packages
      # - run: npm ci

      # - name: Run linter
      # - run: NX_BRANCH=${{ steps.vars.outputs.current_branch }} yarn lint:ci

      # - uses: borales/actions-yarn@v2.0.0
      #   with:
      #     cmd: install # will run `yarn install` command
      # - uses: borales/actions-yarn@v2.0.0
      #   with:
      #     cmd: build:ci # will run `yarn build` command
      # - uses: borales/actions-yarn@v2.0.0
      #   with:
      #     cmd: test:ci # will run `yarn test` command

      # - name: Yarn Install
      # - run: yarn install

      # - name: Run Linter
      # - run: yarn lint:ci
      #   working-directory: ./
