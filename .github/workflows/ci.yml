name: CI

# Run on push only for main
# Otherwise it may trigger concurrently `push & pull_request` on PRs.
on:
  push:
    branches:
      - main
      - ci
    paths-ignore:
      - '*.md'
      - '.vscode/**'
      - 'docs/**'
      - 'examples/**'
      - 'LICENSE'
      - 'tools/**'
      - 'graphs/**'
  pull_request:
    paths-ignore:
      - '*.md'
      - '.vscode/**'
      - 'docs/**'
      - 'examples/**'
      - 'LICENSE'
      - 'tools/**'
      - 'graphs/**'
  workflow_dispatch:

env:
  PRISMA_TELEMETRY_INFORMATION: 'fullerstack ci.yml'
  GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

jobs:
  # os-deps:
  #   runs-on: ubuntu-20.04

  #   steps:
  #     - name: Install system dependencies
  #     run: |
  #       sudo apt update
  #       sudo apt install git

  # Last identical jobs wins: https://github.com/marketplace/actions/skip-duplicate-actions
  # Stop and clean up any currently running similar jobs in workflow
  cleanup-runs:
    continue-on-error: true
    runs-on: ubuntu-20.04
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"
    steps:
      - uses: fkirc/skip-duplicate-actions@v3.4.0

  #
  # Linting
  #
  lint:
    timeout-minutes: 7
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      # https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Yarn Install
      - run: yarn install

      # - name: Run Linter
      # - run: yarn lint:ci
      #   working-directory: ./
